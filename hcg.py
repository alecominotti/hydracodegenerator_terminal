#!/usr/bin/python3

# Ale Cominotti - 2020

from resources import CodeGenerator
import time
import random
import os
import argparse
import base64
import webbrowser


PURPLE = '\033[95m'
CYAN = '\033[96m'     
DARKCYAN = '\033[36m'
BLUE = '\033[94m'
GREEN = '\033[92m'
YELLOW = '\033[93m'
RED = '\033[91m'
BOLD = '\033[1m'
ITALIC = '\033[3m'
WHITE = '\033[0m'   
minRandom=0 #default min
maxRandom=5 #default max
txtfile="hydraCode.txt"
hydraURL="https://hydra.ojack.xyz/?code="
hydraURL = hydraURL.encode("utf-8")
web=False

#Argument parsing----------
parser = argparse.ArgumentParser()
parser.add_argument("-f", "--fixed", type=int, metavar='<Integer>', help="Fixed amount of modifiers (Always the same)")
parser.add_argument("--min", type=int, metavar='<Integer>', help="Minimum amount of modifiers")
parser.add_argument("--max", type=int, metavar='<Integer>', help="Maximum amount of modifiers")
parser.add_argument("--web", action='store_true', help="Maximum amount of modifiers")
args = parser.parse_args()

if args.fixed:
    minRandom=args.fixed
    maxRandom=args.fixed
else:
    if args.min:
        minRandom=args.min
        if(minRandom>maxRandom):
            maxRandom=minRandom
    if args.max:
        maxRandom=args.max
    if args.min and args.max and (args.min>args.max):
        print(RED+"ERROR: " + WHITE + "Max value must be bigger than Min value")
        exit(1)

if args.web:
    web=True


def printBanner():
    os.system("clear")
    print(YELLOW + """  _   _           _              ____          _         ____                           _             
 | | | |_   _  __| |_ __ __ _   / ___|___   __| | ___   / ___| ___ _ __   ___ _ __ __ _| |_ ___  _ __ 
 | |_| | | | |/ _` | '__/ _` | | |   / _ \ / _` |/ _ \ | |  _ / _ \ '_ \ / _ \ '__/ _` | __/ _ \| '__|
 |  _  | |_| | (_| | | | (_| | | |__| (_) | (_| |  __/ | |_| |  __/ | | |  __/ | | (_| | || (_) | |   
 |_| |_|\__, |\__,_|_|  \__,_|  \____\___/ \__,_|\___|  \____|\___|_| |_|\___|_|  \__,_|\__\___/|_|   
        |___/
                """)
   


def generateCode(hydra, modifiersAmount):
    fullCode=""
    info="// Random Hydra code generated by HCG: https://github.com/alecominotti/hydracodegenerator\n// @alecominotti\n\n"
    if args.fixed:
        print(WHITE+"Source modifiers: " + str(modifiersAmount) + " (Fixed)")
    else:
        print(WHITE+"Source modifiers: Random between " + str(minRandom) + "-" + str(maxRandom))
    terminalSize = os.popen('stty size', 'r').read().split()
    bar=""
    for z in range(int(terminalSize[1])):
        bar+="-"
    print(CYAN + bar + WHITE)
    with open(txtfile, 'w+') as txt:
        txt.write(info)
        fullCode+='''{info}'''.format(info=info)
        source = hydra.genSource()
        txt.write(source + "\n")
        fullCode+='''{source}\n'''.format(source=source)
        print(GREEN + source)        
        for x in range(modifiersAmount):
            modifier = hydra.genModifier()
            txt.write('  ' + modifier + "\n")
            fullCode+='''  {modifier}\n'''.format(modifier=modifier)
            print("  " + modifier)
        txt.write(".out(o0)")
        fullCode += ".out(o0)"
        print(".out(o0)")
    print(CYAN + bar + WHITE)
    fullCode = fullCode.encode("utf-8")
    fullCode = base64.b64encode(fullCode)
    finalURL= str(hydraURL + fullCode)
    finalURL = finalURL[2:-1]
    return(str(finalURL))


def main():
    hydra=CodeGenerator.CodeGenerator()
    modifiersAmount= random.randint(minRandom,maxRandom)
    printBanner()
    hydraCodeURL = generateCode(hydra, modifiersAmount)
    print(WHITE+"Select code and press " + GREEN + "Ctrl+Shift+C " + WHITE + "to copy it")
    print(WHITE+"Press " + GREEN + "Enter " + WHITE + "to generate new code")
    print(WHITE+"Code is saved in '" + GREEN + "hydraCode.txt" + WHITE + "'")
    print(WHITE+"\nRun hydra with this code by clicking the following link:" + GREEN )
    print(hydraCodeURL)
    print(WHITE)
    if web:
        webbrowser.open_new(hydraCodeURL)
    input("Press " + GREEN + "Ctrl+C " + WHITE + "to exit")
   

try:
    while True:    
        main()
        
except KeyboardInterrupt:
        print(YELLOW + "\nProgram stopped." + WHITE)